/*
 * Created By nedaluof  6/13/2020.
 */
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply from: '../spotless.gradle'
apply from: "$rootDir/dependencies.gradle"

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        applicationId "com.nedaluof.qurany"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionCode versions.versionCode
        versionName versions.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }
    buildFeatures.dataBinding = true
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    kapt { correctErrorTypes = true }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    /** app **/
    //app compat
    implementation "androidx.appcompat:appcompat:$versions.appCompat"
    //constraint layout
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"
    //recycler view
    implementation "androidx.recyclerview:recyclerview:$versions.recyclerView"
    //MDC
    implementation "com.google.android.material:material:$versions.material"
    //swipe refresh layout
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$versions.swipeRefreshLayout"
    //layouts design sizes helper
    implementation "com.intuit.sdp:sdp-android:$versions.intuit"
    implementation "com.intuit.ssp:ssp-android:$versions.intuit"
    //text painter animation
    implementation "com.yanzhikai:TextPathView:$versions.painter"
    //chips navigation
    implementation "com.ismaeldivita.chipnavigation:chip-navigation-bar:$versions.chipNavigation"
    //alerter
    implementation "com.tapadoo.android:alerter:$versions.alerter"
    //toasty
    implementation "com.github.GrenderG:Toasty:$versions.toasty"
    //fragment extensions
    implementation "androidx.fragment:fragment-ktx:$versions.fragmentKtx"
    //exoPlayer
    implementation "com.google.android.exoplayer:exoplayer:$versions.exoPlayer"

    /**jet-pack Components**/
    //lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"
    //room database
    implementation "androidx.room:room-runtime:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"
    implementation "androidx.room:room-ktx:$versions.room"
    //hilt dependencies injection
    implementation "com.google.dagger:hilt-android:$versions.hilt"
    kapt "com.google.dagger:hilt-android-compiler:$versions.hilt"
    //DataStore
    implementation "androidx.datastore:datastore-preferences:$versions.dataStore"
    //preference
    implementation "androidx.preference:preference-ktx:$versions.preference"
    //startup
    implementation "androidx.startup:startup-runtime:$versions.startup"

    /** remote **/
    implementation("com.squareup.retrofit2:retrofit:$versions.retrofit") { exclude module: 'okhttp' }
    implementation "com.squareup.retrofit2:converter-gson:$versions.converter"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.interceptor"

    /** kotlin **/
    //kotlin extensions
    implementation "androidx.core:core-ktx:$versions.coreKtx"
    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
    //kotlin reflect
    implementation "org.jetbrains.kotlin:kotlin-reflect:$versions.reflect"


    // debugging
    implementation "com.jakewharton.timber:timber:$versions.timber"

    //Test libs
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    //testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation 'org.mockito:mockito-core:3.9.0'
    testImplementation 'org.mockito:mockito-inline:3.9.0'
}
